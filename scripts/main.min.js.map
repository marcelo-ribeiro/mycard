{"version":3,"sources":["main.js","app.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error","baseUrl","form","document","forms","inputCode","getElementById","codeList","inputPhone","formatPhone","phone","_phone","replace","addEventListener","value","this","focus","event","preventDefault","url","href"],"mappings":";;;;;;;;;;;;;;;;;;CAmBA,WACA,YAMA,IAAAA,GAAAC,QAAA,cAAAC,OAAAC,SAAAC,UAEA,UAAAF,OAAAC,SAAAC,UAEAF,OAAAC,SAAAC,SAAAC,MACA,0DAIA,kBAAAC,aACA,WAAAJ,OAAAC,SAAAI,UAAAP,IACAM,UAAAE,cAAAC,SAAA,qBACAC,KAAA,SAAAC,GAEAA,EAAAC,cAAA,WAKA,GAAAN,UAAAE,cAAAK,WAAA,CAGA,GAAAC,GAAAH,EAAAI,UAEAD,GAAAE,cAAA,WACA,OAAAF,EAAAG,OACA,IAAA,YAKA,KAEA,KAAA,YACA,KAAA,IAAAC,OAAA,yDAvBAZ,SAgCA,SAAAa,GACAC,QAAAC,MAAA,4CAAAF,QCrEA,WACA,YAEA,MAAAG,GAAA,uCACAC,EAAAC,SAAAC,MAAA,GACAC,EAAAF,SAAAG,eAAA,cACAC,EAAAJ,SAAAG,eAAA,mBACAE,EAAAL,SAAAG,eAAA,eAEAG,EAAA,SAAAC,GACA,KAAAC,GAAAD,CAKA,OAJAC,GAAAC,QAAA,MAAA,IACAD,EAAAC,QAAA,IAAA,IACAD,EAAAC,QAAA,IAAA,IACAD,EAAAC,QAAA,IAAA,IACAD,EAGAJ,GAAAM,iBAAA,SAAA,WACAR,EAAAS,MAAAC,KAAAD,MACAN,EAAAQ,UAGAd,EAAAW,iBAAA,SAAA,SAAAI,GACAA,EAAAC,gBAEA,MAAAR,GAAAD,EAAAD,EAAAM,OACAK,EAAAlB,EAAAI,EAAAS,MAAAJ,CAEA7B,QAAAC,SAAAsC,KAAAD,EACAX,EAAAM,MAAA","file":"main.min.js","sourcesContent":["/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function(registration) {\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function() {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function() {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n              default:\n                // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  // Your custom JavaScript goes here\n})();\n","/* eslint-disable no-undef */\n(function() {\n  'use strict';\n\n  const baseUrl = 'https://api.whatsapp.com/send?phone=';\n  const form = document.forms[0];\n  const inputCode = document.getElementById('input-code');\n  const codeList = document.getElementById('input-code-list');\n  const inputPhone = document.getElementById('input-phone');\n\n  const formatPhone = function(phone) {\n    const _phone = phone;\n    _phone.replace(/\\s/g, '');\n    _phone.replace('-', '');\n    _phone.replace('(', '');\n    _phone.replace(')', '');\n    return _phone;\n  };\n\n  codeList.addEventListener('change', function() {\n    inputCode.value = this.value;\n    inputPhone.focus();\n  });\n\n  form.addEventListener('submit', function(event) {\n    event.preventDefault();\n\n    const phone = formatPhone(inputPhone.value);\n    const url = baseUrl + inputCode.value + phone;\n\n    window.location.href = url;\n    inputPhone.value = '';\n  });\n})();\n"]}